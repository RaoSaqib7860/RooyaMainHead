def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libavdevice.so'
        pickFirst 'lib/x86/libswscale.so'
        pickFirst 'lib/x86/libavcodec.so'
        pickFirst 'lib/x86_64/libavutil.so'
        pickFirst 'lib/armeabi-v7a/libswscale_neon.so'
        pickFirst 'lib/x86_64/libavcodec.so'
        pickFirst 'lib/x86_64/libswscale.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libavformat.so'
        pickFirst 'lib/x86/libavfilter.so'
        pickFirst 'lib/arm64-v8a/libavcodec.so'
        pickFirst 'lib/x86/libswresample.so'
        pickFirst 'lib/armeabi-v7a/libavdevice_neon.so'
        pickFirst 'lib/armeabi-v7a/libavfilter_neon.so'
        pickFirst 'lib/armeabi-v7a/libavutil.so'
        pickFirst 'lib/armeabi-v7a/libswresample.so'
        pickFirst 'lib/arm64-v8a/libavformat.so'
        pickFirst 'lib/x86/libavformat.so'
        pickFirst 'lib/armeabi-v7a/libavutil_neon.so'
        pickFirst 'lib/armeabi-v7a/libavformat.so'
        pickFirst 'lib/armeabi-v7a/libavcodec.so'
        pickFirst 'lib/armeabi-v7a/libswscale.so'
        pickFirst 'lib/arm64-v8a/libavutil.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/x86_64/libavdevice.so'
        pickFirst 'lib/arm64-v8a/libavfilter.so'
        pickFirst 'lib/x86_64/libswresample.so'
        pickFirst 'lib/arm64-v8a/libswscale.so'
        pickFirst 'lib/armeabi-v7a/libswresample_neon.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libavfilter.so'
        pickFirst 'lib/x86/libavdevice.so'
        pickFirst 'lib/x86/libavutil.so'
        pickFirst 'lib/armeabi-v7a/libavformat_neon.so'
        pickFirst 'lib/armeabi-v7a/libavcodec_neon.so'
        pickFirst 'lib/x86_64/libavfilter.so'
        pickFirst 'lib/arm64-v8a/libswresample.so'
        pickFirst 'lib/arm64-v8a/libavdevice.so'
    }

    rootProject.ext.ffmpegKitPackage = "video"

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "main.rooya.com"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            minifyEnabled false
            useProguard false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
}
